                               Database backed Websites
                                    D R A F T ­ Version:

                                       Thorbjørn Ravn Andersen
                                            February 14, 2000

   Abstract:
        This thesis discusses database backed websites, and how this allows companies to use "Single
        Source Publishing". Technologies are discussed with an emphasis on Open Source software,
        and a sample program "Cactus" which allows automated SSP on an Intranet is presented.

1 What is a database backed webserver?
Provide background information: Quick overview of the technology [webserver, database, http, sql, dy-
namically generated content vs] with a graph. Give simple example. Explain when things happen (on-
the-fly vs statically generated pages). Explain the advantages and disadvantages databases have over flat
filesystems [transactions(protection, atomicity), extra attributes, speed, indexed columns, complex queries,
scalability(linear search in filesystems, multihost db's),

2 Single Source Publishing
Describe why it is important to be able to render finished versions of documents fully automatically from a
single annotated source (www/print/cdrom/Palm Pilot/braille/handicapped persons). The better the annota-
tion, the better the output (ref: Stibo). Describe the need for SGML (history/usage) and XML (why/browser
support/on-the-fly publishing/bleeding edge - being standardized).
   Donald Knuth - TEX/Web/Literate Programming. Ask Steffen Enni about his thoughts. Javadoc. Perl
POD.

3 Why is Open Source essential?
Independence from hardware and software vendors, allowing free choice of hardware platform and oper-
ating system, as well as the possibility to fix bugs and use other products. (Examples: XT versus Xerces,
Java Interpreter for Linux, servlet technologies, cheap - use money for hardware instead of licenses).

4 Sample websites
slashdot.org (examine code - ask developer), Politiken, DynaWeb (SGI - oooold check on fyn, when was it
first developed?), valueclick (banners - ask Ask for full story. What are they running), php3 documentation
online. photo.net (reread). Sun's docs.sun.com (DocBook SGML)

5 Overview of technology available for Linux February 2000
Describe what products there are currently available for these categories. Evaluate as much as possible.
Conclude that currently this is an area in great development.

                                                       1



5.1 Webservers
Apache, misc Servlet Javaservers (jetty, thttpd, java webserver, etc). Look for comparisons. Roxen
(graphs). Discuss whether several webservers should be run on the same machine to provide better services.

5.2 Database engines
Full SQL servers: MySQL/mSql/DB2/Oracle (spank their FLUG policy)/Informix/PostgresSQL (discuss
features: transactions, unique numbers, in-kernel code, speed, availablity, multi-host capabilities?). Any
flat file RDBS?
   Tricks: Menu system in LDAP (lr.dk).

5.3 Browsers
MSIE5 (XML support, Solaris), Mozilla (alpha), Netscape (too old), HotJava 3.0 (no XML, can be ex-
panded to do XML conversion internally?), Opera (?), Amaya (other W3C browsers?), AWTviewer in fop
(can it do xml directly?),

5.4 XML utilities
XT, Xerces, Cocoon, SQL2xml, validators (error recovering?), converters to XML (pod2docbook, tex4h,
Perl with appropriate modules?, wordview modified?)

5.5 PDF utilities
pdfzone. acroread (ok, heavy), xpdf (font problems with bitmaps, ugly but fast), gv (pretty good). Distiller
(check what it can do). Use pdfinfo to get the number of pages in the pdffile.
   Conclude that it is possible to have a 100% Java solution for on-the-fly publishing XML to HTML and
PDF through a webserver. Discuss why developers do it in Java, as opposed to any other language.

6 SGML, XML and DocBook
The history and usage of SGML. Creation of XML. Describe document validation, and conversion (XSLT)
to XML and other formats. Freedom from restrictions of HTML. Problems with tons and tons of DTD's.
The need for well-documented standard, robust, supported DTD's (current ones: TEI, ebook [buh], Doc-
Book). HTML conversion utilities can be tailored to generated DocBook XML for SSP (currently pod2docbook,
Excel xls2xml). Found that SGML (jade) is powerful but too slow for on-the-fly stuff, as opposed to XML
rendererer. Who uses DocBook at the moment? Man pages in DocBook on Solaris (look on machine).

7 Can users transparently harness the power of XML for webpub-
     lishing?
Discuss how users can use their current tools to publish information to the web (Cactus principles: data
capture and automatic conversion) by automatic conversion to XML and on-the-fly conversion on the way
out of the webserver (while still having access to the original file provided by the user). This also allows
people to view files made with software products not available to them.

8 Active and passive data collection for a webserver
User can "push" data to the system, or the system can actively watch a resource (directory, webpage, usenet
server, "channels") and update whenever new data is available. www.mind-it.com.


                                                     2



9 Search engines and datamining
htdig (process website) swish (process files for website) are ok. With database you can ask the database
directly (currently in blobs) but with more analysis of the files you can do better.

10 Conclusion
Databases are great, yea! Webservers are great, yea! Things must be powerful and easy for best results.
   .

A Sample implementation ­ Cactus
Cactus is a sample implementation of the following issues:

   * easy publishing - users can publish via email/fax/print which is processed into the SQL database,
        and confirmed.

   * automatic conversion - system will automatically convert a given document to what the user can
        see (or want). Browser sends a capability string with each request - use that to provide stuff directly,
        or generate a "this is available" summary.

A.1 Background
Explain the history. Yggdrasil to address the need of an automatic webmaster   analysis (seperate file
written earlier). Cactus to address the difficulties of publishing information to Yggdrasil.

B Bibliography with Web references
Full reference with a lot of annotated URL's.
























                                                        3



